---
title: "Nonparametric Econometrics Ch1"
subtitle: Comprehensive guide to using Quarto. 
date: "`r Sys.Date()`"
author: "Jiang Kunyi"
anchor-sections: true
search: false
image: /images/hero_right.png
css: styles.css
toc: true
reference-location: margin
citation-location: margin
execute: 
  echo: fenced
format:
    html: 
      grid: 
        margin-width: 350px
    pdf: default
---

This document demonstrates the use of a number of advanced page layout features to produce an attractive and usable document inspired by the Tufte handout style and the use of Tufte's styles in RMarkdown documents. The Tufte handout style is a style that Edward Tufte uses in his books and handouts. Tufte's style is known for its extensive use of sidenotes, tight integration of graphics with text, and well-set typography. Quarto[^1] supports most of the layout techniques that are used in the Tufte handout style for both HTML and LaTeX/PDF output.

[^1]: To learn more, you can read more about [Quarto](https://www.quarto.org) or visit [Quarto's Github repository](https://www.github.com/quarto-dev/quarto-cli).

::: column-page-right
*R is free software and comes with ABSOLUTELY NO WARRANTY.* You are welcome to redistribute it under the terms of the GNU General Public License versions 2 or 3. For more information about these matters see <https://www.gnu.org/licenses/>.
:::

``` yaml
---
title: "An Example Using the Tufte Style"
author: "John Smith"            
format:
  html:
    grid:
      margin-width: 350px         # <1>
  pdf: default    
reference-location: margin        # <2>
citation-location: margin         # <2>       
---
```

1.  Increases the width of the margin to make more room for sidenotes and margin figures (HTML only).
2.  Places footnotes and cited sources in the margin. Other layout options (for example placing a figure in the margin) will be set per element in examples below.


These layout features are designed with two important goals in mind:

1.  To produce both PDF and HTML output with similar styles from the same Quarto document;
2.  To provide simple syntax to write elements of the Tufte style such as side notes and margin figures. If you'd like a figure placed in the margin, just s

# One-Sample Methods

The nonparametric tests described in this course are often called distribution-free test procedures because the validity of the tests does not depend on the underlying model (distribution) assumption. In other words, the significance level of the tests does not depend on the distributional assumptions.

-   One-sample data: consists of observations from a single population.

-   Primary interest: make inference about the location/center of the single distribution.

-   Two popular measurements of location/center

    -   Mean: sensitive to outliers

    -   Median: robust against outliers

    -   Mean and Median are the same for symmetric distributions.

## Parametric Methods

### One-sample Z-test (see Chapter 0.3.1)

-   Assumption: The random sample $X_1, · · · , X_n$ are $i.i.d$ from $N(\mu ,\sigma^2)$, where $\mu$ is the unknown mean, and $\sigma^2$ is the variance and is known.
-   Null hypothesis $H_0 : \mu = \mu_0$ (the distribution is centered at $\mu_0$\~, a prespecified null value).
-   Significance level $\alpha$, *i.e.* we want to control $$Type~I~error =  P(Reject~H_0~|~H_0~is~True) \le \alpha.$$
-   **Test statistic** 
$$Z =\frac{\hat{X}-\mu_0}{\sigma / \sqrt{n}}$$ 
where $\hat{X}=\dfrac{1}{n}{\displaystyle \sum_{i=i}^{n}X_i}$. Under $H_0,~ Z ∼ N(0,1).$




```{r}
##
#### R code: analysis of the IQ score data set
##
#Test if the mean score is significantly greater than 100
#(1) suppose sigma=10 is known (z-test)
x = c(121, 98, 95, 94, 102, 106, 112, 120, 108, 109);
xbar = mean(x);
sigma=10;
n = length(x);
zval = (xbar - 100)/(sigma/sqrt(n));
zval;
pvalue = 1-pnorm(zval)
pvalue;
#(2) suppose sigma is unknown (one-sample t-test)
s = sd(x)
tval = (xbar - 100)/(s/sqrt(n))
tval
df=n-1
pvalue = 1-pt(tval, df)
#or use the existing R function, the default is 2-sided alternative
# test if E(X)-100>0 (alternative)
t.test(x-100, alternative ="greater")
```
